{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karan\\\\Desktop\\\\New folder (8)\\\\CapStone\\\\HungryHub-main\\\\front_end\\\\src\\\\components\\\\changepdwd.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './css/SignupForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Changepswd = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [updateStatus, setUpdateStatus] = useState(null);\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    try {\n      // Make a request to the backend to reset the password\n      await axios.put('http://localhost:5000/api/changepswd', {\n        username,\n        newPassword\n      });\n      setUpdateStatus('success');\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setUpdateStatus('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      className: \"frm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          className: \"form-group\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          className: \"form-group\",\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"signupbtn\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), updateStatus === 'success' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password reset successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }, this), updateStatus === 'error' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error resetting password. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Changepswd, \"jiHKjyoTprSAp/uPquJQot7VXBI=\");\n_c = Changepswd;\nexport default Changepswd;\nvar _c;\n$RefreshReg$(_c, \"Changepswd\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Changepswd","_s","username","setUsername","email","setEmail","newPassword","setNewPassword","updateStatus","setUpdateStatus","handleResetPassword","e","preventDefault","put","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/karan/Desktop/New folder (8)/CapStone/HungryHub-main/front_end/src/components/changepdwd.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './css/SignupForm.css';\r\n\r\nconst Changepswd = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [updateStatus, setUpdateStatus] = useState(null);\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Make a request to the backend to reset the password\r\n      await axios.put('http://localhost:5000/api/changepswd', {\r\n        username,\r\n     \r\n        newPassword,\r\n      });\r\n\r\n      setUpdateStatus('success');\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      setUpdateStatus('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-form-container\">\r\n      <h2>Change Password</h2>\r\n      <form onSubmit={handleResetPassword} className=\"frm\">\r\n        <label>\r\n          Username:\r\n          <input type=\"text\" value={username} className=\"form-group\" onChange={(e) => setUsername(e.target.value)} />\r\n        </label>\r\n      \r\n        <label>\r\n          New Password:\r\n          <input\r\n            type=\"password\"\r\n            value={newPassword} className=\"form-group\"\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"signupbtn\">Reset Password</button>\r\n      </form>\r\n      {updateStatus === 'success' && <p>Password reset successfully!</p>}\r\n      {updateStatus === 'error' && <p>Error resetting password. Please try again later.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Changepswd;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}